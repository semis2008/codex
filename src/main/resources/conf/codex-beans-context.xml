<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd  
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd  
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

    <!-- 自动扫码aop切面 -->
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
    <!-- context用于配置文件{}-->
    <context:property-placeholder location="classpath:conf/jdbc.properties"/>
    <!-- util用于类中的注解@Value("#{}")-->
    <!--<util:properties id="jdbcProperties" location="classpath:conf/custom/env/jdbc.properties" />-->

    <!-- 数据源tomcatJdbcPool -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <property name="validationQuery" value="SELECT 1"/>
        <property name="validationInterval" value="30000"/>
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <property name="maxActive" value="100"/>
        <property name="minIdle" value="2"/>
        <property name="maxWait" value="10000"/>
        <property name="initialSize" value="4"/>
        <property name="removeAbandonedTimeout" value="60"/>
        <property name="removeAbandoned" value="true"/>
        <property name="logAbandoned" value="true"/>
        <property name="minEvictableIdleTimeMillis" value="30000"/>
        <property name="jmxEnabled" value="true"/>
    </bean>
    <!-- session工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          lazy-init="false">
        <property name="configLocation" value="classpath:conf/codex-mybatis-config.xml"></property>
        <property name="dataSource" ref="dataSource"/>
        <!-- 指定myBatis的xml映射器文件的位置 -->
        <property name="mapperLocations" value="classpath:mybatis/*map.xml"/>
    </bean>
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.codex.dao"/>
    </bean>
    <!-- 事物控制 -->
    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="*TX" propagation="REQUIRED" isolation="READ_COMMITTED"
                       timeout="-1" read-only="false" no-rollback-for="" rollback-for="java.lang.Exception"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="*" propagation="SUPPORTS" read-only="false"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <!--把事务控制在Service层-->
        <aop:pointcut id="pc" expression="execution(public * com.codex.service.*.*(..))" />
        <aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
    </aop:config>

</beans>